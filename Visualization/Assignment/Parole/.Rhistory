mkdir ~/HelloWorld.md
## This is a markdown file
install.packages("swirl
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
library(swirl
library(swirl)
library(swirl)
swirl()
quit
library(swirl)
swirl()
swirl()
library(dplyr)
cran -> tbl()
view()
cran -> tbl_df(cran)
library(swirl)
swirl()
cran -> tbl_df(cran)
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
avg_bytes = mean(size) )
avg_bytes = mean(size))
submit()
count = n()
pack_sum <- summarize(by_package,
count = n() ,
unique = n_distinct(ip_id) ,
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
reset()
swirl()
?n
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
pack_sum <- summarize(by_package,
count = n() ,
unique = n_distinct(ip_id) ,
countries = n_distinct(country) ,
avg_bytes = mean(size) )
submit()
setwd("~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/MIT Int")
source('~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/MIT Int/MIT Intl.R', echo=TRUE)
library(ggplot2)
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity")
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
intl = transfrom(intl, Region = reorder(Region, -PercentOfIntl))
str(intl)
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
intl = transform(intl, Region = reorder(Region, -PercentOfIntl))
str(intl)
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity", fill = "blue") + geom_text(aes(label=PercentOfIntl), vjust = 0.4) + ylab("Percentage of International Student") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity", fill = "blue") + geom_text(aes(label=PercentOfIntl), vjust = 0.8) + ylab("Percentage of International Student") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(intl, aes(x= Region, y= PercentOfIntl)) + geom_bar(stat = "identity", fill = "blue") + geom_text(aes(label=PercentOfIntl), vjust = 1) + ylab("Percentage of International Student") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
library(ggmap)
intlall = read.csv("intlall.csv")
head(intlall)
intlall[is.na(intlall)] = 0
head(intlall)
world_map = map_data("world")
str(workd_map)
str(world_map)
world_map = merge(world_map, intlall, by.x = "region", by.y = "Citizenship")
?ggmap
ggmap(world_map, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_map("mrcator")
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_map("mercator")
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_map("mercator")
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_map("mercator")
ggplot(world_map, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_map("mrcator")
ggplot(world_map, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_map("mercator")
world_map = world_map[order(world_map$group, world_map$order),]
ggplot(world_map, aes(x=long, y=lat, group=group)) + geom_polygon(fill="white", color="black") + coord_map("mercator")
table(intlall$Citizenship)
intlall$Citizenship[intlall$Citizenship=="China (People's Republic Of)"] = "China"
table(intlall$Citizenship)
intlall$Citizenship[intlall$Citizenship=="China (People's Republic Of)"] = "China"
intlall$Citizenship[intlall$Citizenship=="China (People's Republic Of)"] <- "China"
library(ggplot2)
library(maps)
library(ggmap)
library(ggplot2)
statesMap = map_data("state")
statesMap
str(statesMap)
# Load ggplot2, maps, ggmap
table(statesMap$group)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "black", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "red", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
polling = read.csv("PollingImputed.csv")
setwd("~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/Assignment")
polling = read.csv("PollingImputed.csv")
str(polling)
train = subset(polling, Year == 2004 | Year == 2008)
test = subset(polling, Year = 2012)
View(train)
View(train)
View(train)
View(test)
test = subset(polling, Year == 2012)
mod2 = glm(Republican ~ SurveyUSA + DiffCount, data = train, family = "binomial")
TestPrediction = predict(mod2, newdaya = test, type = "response")
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
TestPrediction = predict(mod2, newdata = test, type = "response")
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
TestPredictionBinary = as.numeric(TestPrediction > 0.5)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
table(TestPrediction)
table(test$TestPrediction)
str(TestPrediction)
table(TestPredictionBinary)
22/45
predictionDataFrame = tolower(predictionDataFrame$test.State)
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
predictionMap = merge(statesMap, predictionDataFrame, by.x = "region", by.y = "test.State")
predictionMap = merge(statesMap, predictionDataFrame, by.x = "region", by.y = "test$State")
str(predictionDataFrame)
predictionMap = merge(statesMap, predictionDataFrame, by.x = "region", by.y = "test.State")
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
summary(predictionDataFrame)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, Test$State)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
predictionDataFrame = tolower(predictionDataFrame$test.States)
predictionDataFrame = data.frame(TestPrediction, TestPredictionBinary, test$State)
predictionDataFrame$region = tolower(predictionDataFrame$test.State)
predictionMap = merge(statesMap, predictionDataFrame, by = "region")
View(predictionDataFrame)
View(predictionMap)
predictionMap = predictionMap[order(predictionMap$order),]
ggplot(predictionMap, aes(x = long, y= lat, group = group)) + geom_polygon(color = "black")
ggplot(predictionMap, aes(x = long, y= lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black")
ggplot(predictionMap, aes(x = long, y= lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = ("Democrat", "Republican"), name = ("Predcition 2012")
ggplot(predictionMap, aes(x = long, y= lat, group = group, fill = TestPredictionBinary)) + geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = ("Democrat", "Republican"), name = ("Predcition 2012"))
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPredictionBinary))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
TestPrediction$Florida
TestPrediction$States
str(TestPrediction)
table(TestPrediction$florida)
table(predictionMap$region)
872/15304
TestPrediction
?geom_polygon
ggplot(predictionMap, aes(x = long, y = lat, group = group, fill = TestPrediction))+ geom_polygon(color = "black", size = 3) + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks= c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
setwd("~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/Assignment/Network Data")
edges = read.csv("edges.csv")
users = read.csv("users.csv")
str(users)
str(edges)
table(users$locale)
table(users$school)
View(users)
install.packages("igraph")
library(igraph)
?graph.data.frame
g = graph.data.frame(edges, T, users)
g = graph.data.frame(edges, F, users)
g = graph.data.frame(edges, T, users)
g = graph.data.frame(edges, F, users)
plot(g,vertext.size = 5, vertext.label = NA)
plot(g,vertex.size = 5, vertex.label = NA)
degree(g)
table(degree(g)>= 10)
V(g)$size = degree(g)/2 +2
plot(g, vertex.label=NA)
table(degree(g))
V(g)$color = "black"
V(g)$color[V(g)$gender == "A"] = "red"
V(g)$color[V(g)$gender == "B"] = "gray"
V(g)
plot(g)
plot(g, vertex.label = NA)
V(g)$color[V(g)$school == "A"] = "red"
V(g)$color[V(g)$school == "AB"] = "yellow"
plot(g, vertex.label = NA)
V(g)$color[V(g)$school == "A"] = "blue"
plot(g, vertex.label = NA)
V(g)$color[V(g)$locale == "A"] = "pink"
V(g)$color[V(g)$locale == "B"] = "green"
plot(g, vertex.label = NA)
?igraph.plotting
tweets = read.csv("tweets.csv")
setwd("~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/Assignment/Word Clouds")
tweets = read.csv("tweets.csv")
tweets = read.csv("tweets.csv")
tweets = read.csv("tweets.csv", stringsAsFactors = F)
setwd("~/Documents/DATA SCIENTIST/Projects/The Analytics Edge/Visualization/Assignment/Parole")
parole = read.csv("parole.csv")
parole = read.csv("parole.csv")
str(parole)
parole$male = as.factor(parole$male)
parole$state = as.factor(parole$state)
parole$crime = as.factor(parole$crime)
table(parole$male)
130/(130+545)
table(parole$violators)
table(parole$violator)
table(parole$violator, parole$male)
14/(116+481+64+14)
which(parole$state = "Kentucky")
?which
which(parole$state, state = "Kentucky")
table(parole$violator, parole$crime)
library(ggplot2)
ggplot(data = parole, aes(x = age)) + geom_histogram()
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth=5)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth=5, color = "blue")
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5, color = "blue")
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5, color = "blue") + facet_grid(male~.)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5, color = "blue") + facet_grid(~.male)
ggplot(data = parole, aes(x = age)) + geom_histogram(binwidth = 5, color = "blue") + facet_grid(.~male)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, color = "blue") + facet_grid(.~male)
colorPalette = c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, color = "blue") + facet_grid(.~male) + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, color = "blue", position = "identity") + facet_grid(.~male) + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, color = "blue", position = "identity", alpha = 0.5) + facet_grid(.~male) + scale_fill_manual(values=colorPalette)
ggplot(parole, aes(x = age, fill = male)) + geom_histogram(binwidth = 5, position = "identity", alpha = 0.5) + scale_fill_manual(values=colorPalette)
ggplot(data = parole, aes(x=time.served)) + geom_histogram()
ggplot(data = parole, aes(x=time.served)) + geom_histogram(binwidth = 1)
ggplot(data = parole, aes(x=time.served)) + geom_histogram(binwidth = 0.1)
ggplot(data = parole, aes(x=time.served)) + geom_histogram(binwidth = 1) + facet_grid(.~crime)
ggplot(data = parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth = 1, position ="identity", alpha = 0.5) + facet_grid(.~crime)
ggplot(data=parole, aes(x=time.served, fill=crime)) + geom_histograph(binwidth=1, position="identity", alpha=0.5)
ggplot(data=parole, aes(x=time.served, fill=crime)) + geom_histogram(binwidth=1, position="identity", alpha=0.5)
ggplot(data = parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth = 1, position="identity", alpha = 0.5) + facet_grid(.~crime)
ggplot(data = parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth = 1, position="identity", alpha = 0.5) + facet_grid(.~crime)
ggplot(data = parole, aes(x=time.served, fill = crime)) + geom_histogram(binwidth = 1, position="identity", alpha = 0.5)
